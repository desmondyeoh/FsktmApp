Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;
var _jsxFileName = '/home/desmond/ReactNativeProjects/FsktmApp/Lecturer.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var Lecturer = function (_React$Component) {
  babelHelpers.inherits(Lecturer, _React$Component);

  function Lecturer() {
    babelHelpers.classCallCheck(this, Lecturer);
    return babelHelpers.possibleConstructorReturn(this, (Lecturer.__proto__ || Object.getPrototypeOf(Lecturer)).apply(this, arguments));
  }

  babelHelpers.createClass(Lecturer, [{
    key: 'render',
    value: function render() {
      var _props$detail = this.props.detail,
          staffTitle = _props$detail.staffTitle,
          Name = _props$detail.Name,
          Position = _props$detail.Position,
          Department = _props$detail.Department,
          Tel = _props$detail.Tel,
          Fax = _props$detail.Fax,
          imgpath = _props$detail.imgpath,
          cvlink = _props$detail.cvlink,
          email = _props$detail.email,
          staffid = _props$detail.staffid;

      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.card, __source: {
            fileName: _jsxFileName,
            lineNumber: 27
          }
        },
        _react2.default.createElement(_reactNative.Image, { source: { uri: imgpath }, style: styles.lecturerImage, __source: {
            fileName: _jsxFileName,
            lineNumber: 28
          }
        }),
        _react2.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          },
          'Name: ',
          staffTitle + ' ' + Name
        ),
        _react2.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 30
            }
          },
          'Position: ',
          Position
        ),
        _react2.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 31
            }
          },
          'Department: ',
          Department
        ),
        _react2.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 32
            }
          },
          'Tel: ',
          Tel
        ),
        _react2.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 33
            }
          },
          'Fax: ',
          Fax
        ),
        _react2.default.createElement(
          _reactNative.Text,
          {
            style: { color: 'red' },
            onPress: function onPress() {
              _reactNative.Linking.openURL('mailto:' + email);
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 34
            }
          },
          'Email: ',
          email
        ),
        _react2.default.createElement(
          _reactNative.Text,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 42
            }
          },
          'CV: ',
          cvlink
        ),
        _react2.default.createElement(
          _reactNative.Text,
          { style: styles.author, __source: {
              fileName: _jsxFileName,
              lineNumber: 43
            }
          },
          staffid
        )
      );
    }
  }]);
  return Lecturer;
}(_react2.default.Component);

exports.default = Lecturer;


var styles = _reactNative.StyleSheet.create({
  title: {
    fontWeight: 'bold'
  },
  lecturerImage: {
    width: 100,
    height: 130
  },
  body: {},
  datetime: {
    color: 'gray',
    fontSize: 12
  },
  author: {
    color: 'gray',
    fontSize: 12
  },
  card: {
    borderWidth: 1,
    backgroundColor: '#fff',
    borderColor: 'rgba(0,0,0,0.1)',
    margin: 5,
    padding: 15,
    shadowColor: '#ccc',
    shadowOffset: { width: 2, height: 2 },
    shadowOpacity: 0.5,
    shadowRadius: 3
  }
});